<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mysqldemo.dao.TBsClassInfoMapper">
  <resultMap id="BaseResultMap" type="com.example.mysqldemo.bean.TBsClassInfo">
    <!--@mbg.generated-->
    <!--@Table crm_base.t_bs_class_info-->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="code" jdbcType="INTEGER" property="code" />
    <result column="college_area_id" jdbcType="INTEGER" property="collegeAreaId" />
    <result column="academy_code" jdbcType="INTEGER" property="academyCode" />
    <result column="major_code" jdbcType="INTEGER" property="majorCode" />
    <result column="class_name" jdbcType="VARCHAR" property="className" />
    <result column="enrollment_year" jdbcType="INTEGER" property="enrollmentYear" />
    <result column="number" jdbcType="INTEGER" property="number" />
    <result column="created_by" jdbcType="INTEGER" property="createdBy" />
    <result column="updated_by" jdbcType="INTEGER" property="updatedBy" />
    <result column="is_delete" jdbcType="BOOLEAN" property="isDelete" />
    <result column="created_at" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updated_at" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--@mbg.generated-->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, code, college_area_id, academy_code, major_code, class_name, enrollment_year, 
    `number`, created_by, updated_by, is_delete, created_at, updated_at
  </sql>
  <select id="selectByExample" parameterType="com.example.mysqldemo.bean.TBsClassInfoExample" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from crm_base.t_bs_class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from crm_base.t_bs_class_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--@mbg.generated-->
    delete from crm_base.t_bs_class_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.example.mysqldemo.bean.TBsClassInfoExample">
    <!--@mbg.generated-->
    delete from crm_base.t_bs_class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="com.example.mysqldemo.bean.TBsClassInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_base.t_bs_class_info (code, college_area_id, academy_code, 
      major_code, class_name, enrollment_year, 
      `number`, created_by, updated_by, 
      is_delete, created_at, updated_at
      )
    values (#{code,jdbcType=INTEGER}, #{collegeAreaId,jdbcType=INTEGER}, #{academyCode,jdbcType=INTEGER}, 
      #{majorCode,jdbcType=INTEGER}, #{className,jdbcType=VARCHAR}, #{enrollmentYear,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{createdBy,jdbcType=INTEGER}, #{updatedBy,jdbcType=INTEGER}, 
      #{isDelete,jdbcType=BOOLEAN}, #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="com.example.mysqldemo.bean.TBsClassInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_base.t_bs_class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="code != null">
        code,
      </if>
      <if test="collegeAreaId != null">
        college_area_id,
      </if>
      <if test="academyCode != null">
        academy_code,
      </if>
      <if test="majorCode != null">
        major_code,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="enrollmentYear != null">
        enrollment_year,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="collegeAreaId != null">
        #{collegeAreaId,jdbcType=INTEGER},
      </if>
      <if test="academyCode != null">
        #{academyCode,jdbcType=INTEGER},
      </if>
      <if test="majorCode != null">
        #{majorCode,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentYear != null">
        #{enrollmentYear,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.example.mysqldemo.bean.TBsClassInfoExample" resultType="java.lang.Long">
    <!--@mbg.generated-->
    select count(*) from crm_base.t_bs_class_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--@mbg.generated-->
    update crm_base.t_bs_class_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.code != null">
        code = #{record.code,jdbcType=INTEGER},
      </if>
      <if test="record.collegeAreaId != null">
        college_area_id = #{record.collegeAreaId,jdbcType=INTEGER},
      </if>
      <if test="record.academyCode != null">
        academy_code = #{record.academyCode,jdbcType=INTEGER},
      </if>
      <if test="record.majorCode != null">
        major_code = #{record.majorCode,jdbcType=INTEGER},
      </if>
      <if test="record.className != null">
        class_name = #{record.className,jdbcType=VARCHAR},
      </if>
      <if test="record.enrollmentYear != null">
        enrollment_year = #{record.enrollmentYear,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        `number` = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.createdBy != null">
        created_by = #{record.createdBy,jdbcType=INTEGER},
      </if>
      <if test="record.updatedBy != null">
        updated_by = #{record.updatedBy,jdbcType=INTEGER},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="record.createdAt != null">
        created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updatedAt != null">
        updated_at = #{record.updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--@mbg.generated-->
    update crm_base.t_bs_class_info
    set id = #{record.id,jdbcType=INTEGER},
      code = #{record.code,jdbcType=INTEGER},
      college_area_id = #{record.collegeAreaId,jdbcType=INTEGER},
      academy_code = #{record.academyCode,jdbcType=INTEGER},
      major_code = #{record.majorCode,jdbcType=INTEGER},
      class_name = #{record.className,jdbcType=VARCHAR},
      enrollment_year = #{record.enrollmentYear,jdbcType=INTEGER},
      `number` = #{record.number,jdbcType=INTEGER},
      created_by = #{record.createdBy,jdbcType=INTEGER},
      updated_by = #{record.updatedBy,jdbcType=INTEGER},
      is_delete = #{record.isDelete,jdbcType=BOOLEAN},
      created_at = #{record.createdAt,jdbcType=TIMESTAMP},
      updated_at = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.mysqldemo.bean.TBsClassInfo">
    <!--@mbg.generated-->
    update crm_base.t_bs_class_info
    <set>
      <if test="code != null">
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="collegeAreaId != null">
        college_area_id = #{collegeAreaId,jdbcType=INTEGER},
      </if>
      <if test="academyCode != null">
        academy_code = #{academyCode,jdbcType=INTEGER},
      </if>
      <if test="majorCode != null">
        major_code = #{majorCode,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentYear != null">
        enrollment_year = #{enrollmentYear,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.mysqldemo.bean.TBsClassInfo">
    <!--@mbg.generated-->
    update crm_base.t_bs_class_info
    set code = #{code,jdbcType=INTEGER},
      college_area_id = #{collegeAreaId,jdbcType=INTEGER},
      academy_code = #{academyCode,jdbcType=INTEGER},
      major_code = #{majorCode,jdbcType=INTEGER},
      class_name = #{className,jdbcType=VARCHAR},
      enrollment_year = #{enrollmentYear,jdbcType=INTEGER},
      `number` = #{number,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BOOLEAN},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update crm_base.t_bs_class_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.code,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="college_area_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.collegeAreaId,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="academy_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.academyCode,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="major_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.majorCode,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="class_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.className,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="enrollment_year = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.enrollmentYear,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="`number` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.number,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createdBy,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updatedBy,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="is_delete = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.isDelete,jdbcType=BOOLEAN}
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.createdAt,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="updated_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=INTEGER} then #{item.updatedAt,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update crm_base.t_bs_class_info
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.code != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.code,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="college_area_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.collegeAreaId != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.collegeAreaId,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="academy_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.academyCode != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.academyCode,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="major_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.majorCode != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.majorCode,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="class_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.className != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.className,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="enrollment_year = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.enrollmentYear != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.enrollmentYear,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="`number` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.number != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.number,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="created_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createdBy != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createdBy,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="updated_by = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updatedBy != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updatedBy,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="is_delete = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.isDelete != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.isDelete,jdbcType=BOOLEAN}
          </if>
        </foreach>
      </trim>
      <trim prefix="created_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createdAt != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.createdAt,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="updated_at = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.updatedAt != null">
            when id = #{item.id,jdbcType=INTEGER} then #{item.updatedAt,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=INTEGER}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_base.t_bs_class_info
    (code, college_area_id, academy_code, major_code, class_name, enrollment_year, `number`, 
      created_by, updated_by, is_delete, created_at, updated_at)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.code,jdbcType=INTEGER}, #{item.collegeAreaId,jdbcType=INTEGER}, #{item.academyCode,jdbcType=INTEGER}, 
        #{item.majorCode,jdbcType=INTEGER}, #{item.className,jdbcType=VARCHAR}, #{item.enrollmentYear,jdbcType=INTEGER}, 
        #{item.number,jdbcType=INTEGER}, #{item.createdBy,jdbcType=INTEGER}, #{item.updatedBy,jdbcType=INTEGER}, 
        #{item.isDelete,jdbcType=BOOLEAN}, #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedAt,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.example.mysqldemo.bean.TBsClassInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_base.t_bs_class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      code,
      college_area_id,
      academy_code,
      major_code,
      class_name,
      enrollment_year,
      `number`,
      created_by,
      updated_by,
      is_delete,
      created_at,
      updated_at,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      #{code,jdbcType=INTEGER},
      #{collegeAreaId,jdbcType=INTEGER},
      #{academyCode,jdbcType=INTEGER},
      #{majorCode,jdbcType=INTEGER},
      #{className,jdbcType=VARCHAR},
      #{enrollmentYear,jdbcType=INTEGER},
      #{number,jdbcType=INTEGER},
      #{createdBy,jdbcType=INTEGER},
      #{updatedBy,jdbcType=INTEGER},
      #{isDelete,jdbcType=BOOLEAN},
      #{createdAt,jdbcType=TIMESTAMP},
      #{updatedAt,jdbcType=TIMESTAMP},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      code = #{code,jdbcType=INTEGER},
      college_area_id = #{collegeAreaId,jdbcType=INTEGER},
      academy_code = #{academyCode,jdbcType=INTEGER},
      major_code = #{majorCode,jdbcType=INTEGER},
      class_name = #{className,jdbcType=VARCHAR},
      enrollment_year = #{enrollmentYear,jdbcType=INTEGER},
      `number` = #{number,jdbcType=INTEGER},
      created_by = #{createdBy,jdbcType=INTEGER},
      updated_by = #{updatedBy,jdbcType=INTEGER},
      is_delete = #{isDelete,jdbcType=BOOLEAN},
      created_at = #{createdAt,jdbcType=TIMESTAMP},
      updated_at = #{updatedAt,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.example.mysqldemo.bean.TBsClassInfo" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into crm_base.t_bs_class_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="collegeAreaId != null">
        college_area_id,
      </if>
      <if test="academyCode != null">
        academy_code,
      </if>
      <if test="majorCode != null">
        major_code,
      </if>
      <if test="className != null">
        class_name,
      </if>
      <if test="enrollmentYear != null">
        enrollment_year,
      </if>
      <if test="number != null">
        `number`,
      </if>
      <if test="createdBy != null">
        created_by,
      </if>
      <if test="updatedBy != null">
        updated_by,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="createdAt != null">
        created_at,
      </if>
      <if test="updatedAt != null">
        updated_at,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=INTEGER},
      </if>
      <if test="collegeAreaId != null">
        #{collegeAreaId,jdbcType=INTEGER},
      </if>
      <if test="academyCode != null">
        #{academyCode,jdbcType=INTEGER},
      </if>
      <if test="majorCode != null">
        #{majorCode,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        #{className,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentYear != null">
        #{enrollmentYear,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=INTEGER},
      </if>
      <if test="collegeAreaId != null">
        college_area_id = #{collegeAreaId,jdbcType=INTEGER},
      </if>
      <if test="academyCode != null">
        academy_code = #{academyCode,jdbcType=INTEGER},
      </if>
      <if test="majorCode != null">
        major_code = #{majorCode,jdbcType=INTEGER},
      </if>
      <if test="className != null">
        class_name = #{className,jdbcType=VARCHAR},
      </if>
      <if test="enrollmentYear != null">
        enrollment_year = #{enrollmentYear,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        `number` = #{number,jdbcType=INTEGER},
      </if>
      <if test="createdBy != null">
        created_by = #{createdBy,jdbcType=INTEGER},
      </if>
      <if test="updatedBy != null">
        updated_by = #{updatedBy,jdbcType=INTEGER},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=BOOLEAN},
      </if>
      <if test="createdAt != null">
        created_at = #{createdAt,jdbcType=TIMESTAMP},
      </if>
      <if test="updatedAt != null">
        updated_at = #{updatedAt,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
</mapper>